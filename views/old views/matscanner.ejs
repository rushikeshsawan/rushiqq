
<style>
    .modal { width: 100% !important ; height: 100% !important ; } 
</style>
<div class="container center-align m-6">


    <div id="hideme" style="margin:10%;" class="m-5">

        <form action="/qrscanned" method="post" class="form-inline">
           
            <div class="form-group mx-sm-3 mb-2">
                <label for="exampleInputEmail1" class="form-label">Enter Total Number of Month For
                    Warranty.!</label>
              <input type="number" name="month" class="form-control" id="exampleInputEmail1" placeholder="Enter Total Period Of Warranty.!">
            </div>
            <input type="hidden" name="productid" id="hiddenfield" class="form-control" id="exampleInputEmail1"
                    aria-describedby="emailHelp">
            <button type="submit" class="btn btn-primary mb-2">Confirm Warranty</button>
          </form>

        <!-- <form action="/qrscanned" method="post">
            <div class="mb-3">
                <label for="exampleInputEmail1" class="form-label">Enter Total Number of Month For
                    Warranty.!</label>
                <input type="number" name="month" class="form-control" id="exampleInputEmail1"
                    aria-describedby="emailHelp">
                <input type="hidden" name="qrcode" id="hiddenfield" class="form-control" id="exampleInputEmail1"
                    aria-describedby="emailHelp">

            </div>

            <button type="submit" id="qr-submit" class="btn btn-primary">Submit</button>
        </form> -->
    </div>
</div>




    <div class="container mb-5 center-align m-5">
    <br><br><br><br><br>
        <!-- <div class="card small text-center mt-5"> -->
    
            <h4><strong>Scan Your QR- Code To Start Warranty Period.!</strong></h4>
            <video id="qr-video"  height="75%" width="75%"></video>
        <!-- </div> -->
    </div>
<br><br>
<br>
<br>
<br>
<br>


    <span id="cam-qr-result"></span>

    <span id="cam-qr-result-timestamp"></span>
    

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<script type="module">
    
     <% if(status==true){
%>
let val= `Warranty Successfully Generated for ` + <%= productid %> ;
swal(val, "ThankYou", "success");
<%
}else if(status=="false"){ %>
    let val= `Warranty Already Generated for product id= `+<%= productid %> +`  or product doesnt exist! `;
    %>
    swal(val, "Sorry", "error");
        <%
    } %>
    $('#hideme').hide();
   
    import QrScanner from "./assets/qr-config/config/qr-scanner.min.js";

    const video = document.getElementById('qr-video');
    const videoContainer = document.getElementById('video-container');
    const camHasCamera = document.getElementById('cam-has-camera');
    const camList = document.getElementById('cam-list');

    const flashToggle = document.getElementById('flash-toggle');
    const flashState = document.getElementById('flash-state');
    const camQrResult = document.getElementById('cam-qr-result');
    const camQrResultTimestamp = document.getElementById('cam-qr-result-timestamp');
    const fileSelector = document.getElementById('file-selector');
    const fileQrResult = document.getElementById('file-qr-result');
    
    // scanner.stop();
    function setResult(label, result) {
        console.log(result.data);
        let val=result.data;
        if(val.includes("productid")){
            val=val.split("=");
            $("#hiddenfield").val(val[1]);
            // label.textContent = result.data;
            // camQrResultTimestamp.textContent = new Date().toString();
            // label.style.color = 'teal';
            // clearTimeout(label.highlightTimeout);
            label.highlightTimeout = setTimeout(() => label.style.color = 'inherit', 100);
            video.style.display = "none";
    
            scanner.stop();
            $('#modal1').modal('open');

           
        //     $('#modal1').modal({
        //     // dismissible: false, // Modal can be dismissed by clicking outside of the modal
        //     opacity: .50, // Opacity of modal background
        //     inDuration: 300, // Transition in duration
        //     outDuration: 200, // Transition out duration
        //     startingTop: '4%', // Starting top style attribute
        //     endingTop: '10%', // Ending top style attribute
        //     ready: function (modal, trigger) { // Callback for Modal open. Modal and trigger parameters available.
        //         alert("Ready");
        //         console.log(modal, trigger);
        //     },
        //     complete: function () { alert('Closed'); } // Callback for Modal close
        // }
        // );

        }else{
            swal("Error!", "Invalid QR Code Please Check Again Later.!", "error");
            // alert("Invalid QR Code, Please Check Again.!!!");
            return;
        }
        // return result.data;
        $(document).ready(function () {
            // $("#hideme").hide();

            if (video.style.display == "none") {
                $("#hideme").show();

            }
            
            $("#qr-submit").submit(function (e) {
                e.preventDefault(); // avoid to execute the actual submit of the form.
                
                var form = $(this);
                var actionUrl = form.attr('action');
                
                ajaxcall();
            });
        });

        function ajaxcall() {
            var form = $("#qr-submit");
            var actionUrl = form.attr('action');
            $.ajax({
                type: "POST",
                url: actionUrl,
                data: form.serialize(),
                dataType: 'application/json',
                success: function (success) {
                    console.log(success);
                    alert(success);


                }
            });
        }


    }

    // ####### Web Cam Scanning #######

    const scanner = new QrScanner(video, result => setResult(camQrResult, result), {
        onDecodeError: error => {
            // camQrResult.textContent = error;
            // camQrResult.style.color = 'inherit';
        },
        highlightScanRegion: true,
        highlightCodeOutline: true,
    });



    scanner.start().then(() => {

        // List cameras after the scanner started to avoid listCamera's stream and the scanner's stream being requested
        // at the same time which can result in listCamera's unconstrained stream also being offered to the scanner.
        // Note that we can also start the scanner after listCameras, we just have it this way around in the demo to
        // start the scanner earlier.
        QrScanner.listCameras(true).then(cameras => cameras.forEach(camera => {
            const option = document.createElement('option');
            option.value = camera.id;
            option.text = camera.label;

        }));
    });



    // for debugging
    window.scanner = scanner;

</script>


</html>